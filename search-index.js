var searchIndex = {};
searchIndex['word_count'] = {"items":[[0,"","word_count","",null,null]],"paths":[]};
searchIndex['lib_word_count'] = {"items":[[0,"","lib_word_count","This is a library to count the words in a text.",null,null],[5,"count_words","","Count the appearances of each word in a string.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":null}],[0,"pivot_sort","","This module contains the implementation of a pivot-based sorting algorithm.",null,null],[5,"pivot_sort_high_to_low","lib_word_count::pivot_sort","Sort a given vector from highest 'weight' to lowest 'weight'.",null,{"inputs":[{"name":"vec"}],"output":null}],[8,"Sortable","","Trait to mark a sortable implementation.",null,null],[10,"weight","","The value to sort by.",0,{"inputs":[{"name":"sortable"}],"output":{"name":"i64"}}],[0,"word_index","lib_word_count","This module is used to index words and does the heavy lifting of our program.",null,null],[3,"IndexedWord","lib_word_count::word_index","A counted word.",null,null],[12,"word","","The word that's indexed.",1,null],[12,"appeared","","The amount of times this word appeared.",1,null],[5,"add_word","","Add a word to a given index.",null,{"inputs":[{"name":"string"},{"name":"vec"}],"output":null}],[11,"eq","","",1,{"inputs":[{"name":"indexedword"},{"name":"indexedword"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"indexedword"},{"name":"indexedword"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"indexedword"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"weight","","",1,{"inputs":[{"name":"indexedword"}],"output":{"name":"i64"}}]],"paths":[[8,"Sortable"],[3,"IndexedWord"]]};
initSearch(searchIndex);
